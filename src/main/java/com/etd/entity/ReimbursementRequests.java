package com.etd.entity;

import java.time.LocalDate;

import com.etd.enumeration.ReimbursementRequestsStatusEnum;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import jakarta.persistence.*;
import lombok.*;

@Entity
@Table(name = "Reimbursement_Requests")
@Data
@AllArgsConstructor
@NoArgsConstructor
public class ReimbursementRequests {

//	AutoGenerated
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "Reimbursement_Requests_Id")
	private int id;

//	By User
	@Column(name = "Travel_Request_Id")
	private int travelRequestId;

//	By user
	@Column(name = "Request_Raised_By_Employee_Id")
	private int requestRaisedByEmployeeId;

//	Current Date
	@Column(name = "Request_Date")
	private LocalDate requestDate = LocalDate.now();

//	By user
	@JoinColumn(name = "Reimbursement_Types_Id")
	@ManyToOne
	@JsonManagedReference
	private ReimbursementTypes reimbursementTypes;

//	By user
	@Column(name = "Invoice_No")
	private String invoiceNo;

//	By user
	@Column(name = "Invoice_Date")
	private LocalDate invoiceDate;

//	By user
	@Column(name = "Invoice_Amount")
	private int invoiceAmount;

//	By user
	@Column(name = "Document_URL")
	private String documentURL;

//	Request processed date
	@Column(name = "Request_Processed_On")
	private LocalDate requestProcessedOn;

//	Request processed by employee id
	@Column(name = "Request_Processed_By_Employee_Id")
	private int requestProcessedByEmployeeId;

//	Auto pick-up
	@Column(name = "Status")
	@Enumerated(EnumType.STRING)
	private ReimbursementRequestsStatusEnum status;

//	Empty for new reimbursement
	@Column(name = "Remarks")
	private String remarks;

}
